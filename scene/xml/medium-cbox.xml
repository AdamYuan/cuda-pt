<?xml version='1.0' encoding='utf-8'?>
<!-- A test file for mitsuba-like scene xml file parser -->
<!-- Author: Qianyue He / Original credit goes to Wenzel Jakob -->
<!-- Only Steady state rendering are supported -->
<!-- Only RGB or rgb spectrums are supported -->
<scene version="1.2">
	<renderer type="vpt">
		<integer name="sample_count" value="128"/>
        <integer name="max_bounce"   value="10"/>
        <integer name="max_diffuse"  value="10"/>
        <integer name="max_specular" value="10"/>
        <integer name="max_transmit" value="10"/>
        <integer name="max_volume"   value="10"/>

		<integer name="specular_constraint" value="-1"/>
		<bool name="bidirectional" value="false"/>
		<float name="caustic_scaling" value="1.5"/>
	</renderer>

	<accelerator type="bvh">
		<integer name="cache_level" value="6"/>
        <integer name="max_node_num" value="8"/>

		<float name="overlap_w" value="0.6"/>
	</accelerator>
	
	<sensor type="perspective">
		<float name="fov" value="39.3077"/>
        <bool name="hflip" value="true"/>
		
		<transform name="toWorld">
			<lookat target="2.78, 2.73, -7.99" origin="2.78, 2.73, -8.00" up="0, 1, 0"/>
		</transform>

		<film type="film">
			<integer name="width" value="1024"/>
			<integer name="height" value="1024"/>
			<bool name="gamma_correction" value="true"/>
		</film>
	</sensor>

	<phase type="hg" id="large-vol">
		<float name="g" value="0.3"/>
	</phase>

	<medium type="homogeneous" id="large-vol">
		<rgb name="sigma_a" value="0.001"/>
		<rgb name="sigma_s" value="20.0"/>
		<float name="scale" value="1"/>
		<ref type="phase" value="large-vol"/>
	</medium>

	<brdf type="forward" id="large-box"/>

	<brdf type="lambertian" id="box">
		<rgb name="k_d" value="#BCBCBC"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="white">
		<rgb name="k_d" value="#BDBDBD"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="left_wall">
		<rgb name="k_d" value="#DD2525"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="right_wall">
		<rgb name="k_d" value="#25DD25"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="light">
		<rgb name="k_d" value="#555555"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<emitter type="area" id="area">
		<!-- <float name="angle" value="10"/> -->
		<rgb name="emission" value="1, 1, 1"/>
		<rgb name="scaler" value="48.0"/>			<!--1.5 for gamma correction, 5 for linear-->
		<string name="bind_type" value="triangle"/>

		<!-- <ref type="texture" id="emitter"/> -->
	</emitter>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/right_wall.obj"/>
		<ref type="material" id="right_wall"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/back.obj"/>
		<ref type="material" id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/ceiling.obj"/>
		<ref type="material" id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/floor.obj"/>
		<ref type="material" id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/left_wall.obj"/>
		<ref type="material" id="left_wall"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/tall-box.obj"/>
		<ref type="material" id="large-box"/>
		<ref type="medium" id="large-vol"/>
		<bool name="cullable" value="true"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/short-box.obj"/>
		<ref type="material" id="box"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/light.obj"/>
		<ref type="material" id="light"/>
		<ref type="emitter" id="area"/>
	</shape>

	<texture id="emitter">
		<string name="emission" value="../textures/others/rgb-emitter.png"/>
	</texture>
</scene>