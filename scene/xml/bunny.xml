<?xml version='1.0' encoding='utf-8'?>
<!-- A test file for mitsuba-like scene xml file parser -->
<!-- Author: Qianyue He / Original credit goes to Wenzel Jakob -->
<!-- Only Steady state rendering are supported -->
<!-- Only RGB or rgb spectrums are supported -->
<scene version="1.1">
	<renderer type="pt"/>
	<bool name="use_bvh" value="true"/>

	<sensor type="perspective">
		<float name="fov" value="39.3077"/>
        <integer name="sample_count" value="128"/>
        <integer name="max_bounce" value="6"/>
		<integer name="cache_level" value="4"/>
        <bool name="vflip" value="true"/>
        <bool name="hflip" value="true"/>
		
		<transform name="toWorld">
			<!-- <lookat target="2.78, 2.73, -7.99" origin="2.78, 2.73, -8.00" up="0, 1, 0"/> -->
			<lookat target="2.895302, 2.186391, -5.080104" origin="2.924365, 2.146135, -6.078870" up="-0.001207, 0.999187, -0.040308"/>
		</transform>

		<film type="film">
			<integer name="width" value="800"/>
			<integer name="height" value="800"/>
			<bool name="gamma_correction" value="false"/>
		</film>
	</sensor>

	<brdf type="plastic" id="bunny1">
		<rgb name="k_d" value="0.6, 0, 0"/>
		<rgb name="k_s" value="1.0, 1.0, 1.0"/>
		<rgb name="sigma_a" value="0.1, 0.1, 0.1"/>
		<float name="trans_scaler" value="0.5"/>
		<float name="thickness" value="1"/>
		<float name="ior" value="1.5"/>
	</brdf>

	<brdf type="lambertian" id="box">
		<rgb name="k_d" value="#BCBCBC"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="white">
		<rgb name="k_d" value="#BDBDBD"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="left_wall">
		<rgb name="k_d" value="#DD2525"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="right_wall">
		<rgb name="k_d" value="#25DD25"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="light">
		<rgb name="k_d" value="#555555"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="det-refraction" id="bunny2">
		<rgb name="k_d" value="1.5"/>
		<rgb name="k_s" value="0.99, 0.99, 0.99"/>
		<rgb name="k_g" value="1.0"/>
	</brdf>

	<emitter type="area" id="area">
		<rgb name="emission" value="1, 1, 1"/>
		<rgb name="scaler" value="50.0"/>			<!--1.5 for gamma correction, 5 for linear-->
		<string name="bind_type" value="triangle"/>
	</emitter>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/right_wall.obj"/>
		<ref type="material" id="right_wall"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/bunny.obj"/>
		<ref type="material" id="bunny2"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/bunny-full.obj"/>
		<ref type="material" id="bunny1"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/back.obj"/>
		<ref type="material" id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/ceiling.obj"/>
		<ref type="material" id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/floor.obj"/>
		<ref type="material" id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/left_wall.obj"/>
		<ref type="material" id="left_wall"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/tall-box.obj"/>
		<ref type="material" id="box"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/short-box.obj"/>
		<ref type="material" id="box"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cbox/light.obj"/>
		<ref type="material" id="light"/>
		<ref type="emitter" id="area"/>
	</shape>
</scene>